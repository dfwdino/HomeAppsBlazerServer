@page "/List-Chore-Items"

@using HomeAppsBlazerServer.Models
@using HomeAppsBlazerServer.Models.Chore

@using HomeAppsBlazerServer.Servcies
@using HomeAppsBlazerServer.Servcies.Chore

@using Microsoft.AspNetCore.Mvc
@using System.ComponentModel.DataAnnotations

@inject ChoresListItemChoresServices choresChoresServices
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

@layout HomeAppsBlazerServer.Components.Layout.Chore.KidsChoreLayout




    <h3>List Chore</h3>
    <div style="padding-bottom:10px" />

@if (Chores is null)
    {
        <p><em>Loadding chore items....</em></p>
    }
else if (Chores.Count.Equals(0))
    {
    <p><em>What happen to the chore?</em></p>
    }
    else
    {

    @foreach (var chore in Chores)
            {

    <div class="row">

        <div class="col-lg-2">
                <label for="itemsname">Chore Name:</label>
        </div>
        <div class="col-lg-2">
                <div id="kidname" @onclick="@(() => EditStore(chore.ChoreHistoryID))"> <span class="link-primary"> @chore.KidsChoreID</span> </div>
        </div>
    </div>

    <div style="padding-top:20px" />

   
            }}

@code {

   
    public List<ChoreListItemsModel> Chores { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
       
        Chores = await choresChoresServices.GetChoreItems();

    }

    void EditStore(int id)
    {
        NavigationManager.NavigateTo($"/Add-Update-Chore/{id}");
    }

}
