@page "/edit-store"
@page "/edit-store/{Id:int}"
@    using HomeAppsBlazerServer.Models
@    using HomeAppsBlazerServer.Servcies
@    using Microsoft.AspNetCore.Mvc

@inject IShoppingServices ShoppingServices
@inject NavigationManager NavigationManger

@rendermode InteractiveServer

@layout HomeAppsBlazerServer.Components.Layout.ShoppingLayout

@if (Id is null)
{
    <h3>Add New store</h3>
}
else
{
    <h3>Update @CurrentShoppingStore.StoreName Store</h3>
}


<EditForm Model="CurrentShoppingStore" OnSubmit="HandleSubmit" >


    <div class="row">

        <div class="col-lg-2">
            <label for="itemsname">Store Name:</label>
        </div>
        <div class="col-lg-2">
            <InputText id="storename" @bind-Value="@CurrentShoppingStore.StoreName" />
        </div>
    </div>


    <div class="row">

        <div class="col-lg-2">
            <label for="itemsname">Store Address:</label>
        </div>
        <div class="col-lg-2">
            <InputText id="storeaddress" @bind-Value="@CurrentShoppingStore.Address" />
        </div>
    </div>


    <div style="padding-bottom:20px" />

    <button type="submit" class="btn btn-primary">Submit</button>

    @if (Id is not null)
    {
        <button class="btn btn-primary" @onclick="@(() => DeleteStore())">Delete</button>
    }

</EditForm>



@code {
    [Parameter]
    public int? Id { get; set; }

    public ShoppingStore CurrentShoppingStore { get; set; } = new() { StoreName = string.Empty };


    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var shoppingstore = await ShoppingServices.GetShoppingStoreByIDAsync((int)(Id));

            if (shoppingstore is not null)
            {
                CurrentShoppingStore = shoppingstore;
            }
        }

    }

    [HttpPost]
    //not working
    async Task DeleteStore()
    {
        //delete
        await ShoppingServices.RemoveShoppingStore((int)Id);

        NavigationManger.NavigateTo($"/ShoppingStores/");
    }

    async Task HandleSubmit()
    {
        if (Id is not null)
        {
            //update
            await ShoppingServices.UpdateShoppingStore(CurrentShoppingStore, (int)Id);
            NavigationManger.NavigateTo($"/ShoppingStores/");
        }
        else
        {
            //add
            await ShoppingServices.AddShoppingStoreAsyn(CurrentShoppingStore);
            NavigationManger.NavigateTo($"/ShoppingStores/");
        }

       

    }

}


        <style>
    .row {
        padding-bottom: 5px;
    }
        </style>